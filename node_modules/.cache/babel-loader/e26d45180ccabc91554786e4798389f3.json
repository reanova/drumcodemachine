{"ast":null,"code":"var _jsxFileName = \"/Users/reanova/Desktop/testfinal/my-app/src/components/play.tsx\";\nimport * as React from \"react\";\nimport \"./playbutton.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class PlayPause extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = () => {\n      if (this.state.playing) {\n        this.props.pause();\n      } else {\n        this.props.play();\n      }\n\n      this.setState({\n        playing: !this.state.playing\n      });\n    };\n\n    this.state = {\n      playing: false\n    };\n  }\n\n  render() {\n    const playClassName = \"playButton\" + (this.state.playing ? \" pauseButton\" : \"\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: this.handleClick,\n      className: playClassName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/reanova/Desktop/testfinal/my-app/src/components/play.tsx"],"names":["React","PlayPause","Component","constructor","props","handleClick","state","playing","pause","play","setState","render","playClassName"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,kBAAP;;AAEA,OAAO,MAAMC,SAAN,SAAwBD,KAAK,CAACE,SAA9B,CAAkD;AACrDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAQZC,WARY,GAQE,MAAM;AACvB,UAAI,KAAKC,KAAL,CAAWC,OAAf,EAAwB;AACpB,aAAKH,KAAL,CAAWI,KAAX;AACH,OAFD,MAEO;AACH,aAAKJ,KAAL,CAAWK,IAAX;AACH;;AACD,WAAKC,QAAL,CAAc;AACVH,QAAAA,OAAO,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADX,OAAd;AAGH,KAjBkB;;AAGf,SAAKD,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;AAGH;;AAaDI,EAAAA,MAAM,GAAG;AACL,UAAMC,aAAa,GACf,gBAAgB,KAAKN,KAAL,CAAWC,OAAX,GAAqB,cAArB,GAAsC,EAAtD,CADJ;AAEA,wBAAO;AAAK,MAAA,OAAO,EAAE,KAAKF,WAAnB;AAAgC,MAAA,SAAS,EAAEO;AAA3C;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAxBoD","sourcesContent":["import * as React from \"react\";\nimport \"./playbutton.css\";\n\nexport class PlayPause extends React.Component<any, any> {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            playing: false,\n        };\n    }\n\n    public handleClick = () => {\n        if (this.state.playing) {\n            this.props.pause();\n        } else {\n            this.props.play();\n        }\n        this.setState({\n            playing: !this.state.playing,\n        });\n    };\n\n    render() {\n        const playClassName =\n            \"playButton\" + (this.state.playing ? \" pauseButton\" : \"\");\n        return <div onClick={this.handleClick} className={playClassName} />;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}