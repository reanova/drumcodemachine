{"ast":null,"code":"var _jsxFileName = \"/Users/reanova/Desktop/testfinal/my-app/src/components/instrument.tsx\";\n\n/* eslint-disable @typescript-eslint/no-useless-constructor */\nimport * as React from \"react\";\nimport { Kick } from \"../engines/kick\";\nimport { Transport } from \"tone\"; // import * as Tone from \"tone\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Instrument extends React.Component {\n  constructor(props) {\n    super(props);\n    this.sound = void 0;\n    this.ctx = void 0;\n    this.loopId = void 0;\n\n    this.handleClick = () => {\n      // Tone.context.resume();\n      this.createLoop(); // Transport.start();\n\n      this.ctx.resume();\n    };\n\n    this.createLoop = () => {\n      Transport.clear(this.loopId);\n\n      const loop = time => {\n        this.sound.trigger(time);\n        this.sound.trigger(time + 0.5);\n        this.sound.trigger(time + 1);\n        this.sound.trigger(time + 1.5);\n      };\n\n      this.loopId = Transport.schedule(loop, \"0\");\n    };\n\n    this.ctx = new AudioContext();\n    this.sound = new Kick(this.ctx);\n    Transport.loop = true;\n    Transport.loopEnd = \"1m\"; // Tone.Transport.bpm.value = 120;\n    // Tone.Transport.schedule(this.startLoop, \"0\");\n    // Tone.Transport.loop = true;\n    // Tone.Transport.loopEnd = \"1m\";\n  } // public startLoop = (time: number) => {\n  //     console.log(\"start loop\", time);\n  //     this.kick.trigger(time);\n  //     this.kick.trigger(time + 0.5);\n  //     this.kick.trigger(time + 1);\n  //     this.kick.trigger(time + 1.5);\n  // }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleClick,\n        children: \"Instrument\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/reanova/Desktop/testfinal/my-app/src/components/instrument.tsx"],"names":["React","Kick","Transport","Instrument","Component","constructor","props","sound","ctx","loopId","handleClick","createLoop","resume","clear","loop","time","trigger","schedule","AudioContext","loopEnd","render"],"mappings":";;AAAA;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,SAAT,QAA0B,MAA1B,C,CACA;;;AAEA,OAAO,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AAY5CC,EAAAA,WAAW,CAACC,KAAD,EAAa;AACpB,UAAMA,KAAN;AADoB,SAXhBC,KAWgB;AAAA,SAVhBC,GAUgB;AAAA,SAThBC,MASgB;;AAAA,SAPjBC,WAOiB,GAPH,MAAM;AACvB;AACA,WAAKC,UAAL,GAFuB,CAGvB;;AACA,WAAKH,GAAL,CAASI,MAAT;AACH,KAEuB;;AAAA,SAsBxBD,UAtBwB,GAsBX,MAAM;AACfT,MAAAA,SAAS,CAACW,KAAV,CAAgB,KAAKJ,MAArB;;AACA,YAAMK,IAAI,GAAIC,IAAD,IAAkB;AAC3B,aAAKR,KAAL,CAAWS,OAAX,CAAmBD,IAAnB;AACA,aAAKR,KAAL,CAAWS,OAAX,CAAmBD,IAAI,GAAG,GAA1B;AACA,aAAKR,KAAL,CAAWS,OAAX,CAAmBD,IAAI,GAAG,CAA1B;AACA,aAAKR,KAAL,CAAWS,OAAX,CAAmBD,IAAI,GAAG,GAA1B;AACH,OALD;;AAMA,WAAKN,MAAL,GAAcP,SAAS,CAACe,QAAV,CAAmBH,IAAnB,EAAyB,GAAzB,CAAd;AACH,KA/BuB;;AAEpB,SAAKN,GAAL,GAAW,IAAIU,YAAJ,EAAX;AACA,SAAKX,KAAL,GAAa,IAAIN,IAAJ,CAAS,KAAKO,GAAd,CAAb;AACAN,IAAAA,SAAS,CAACY,IAAV,GAAiB,IAAjB;AACAZ,IAAAA,SAAS,CAACiB,OAAV,GAAoB,IAApB,CALoB,CAOpB;AACA;AAEA;AACA;AACH,GAxB2C,CA0B5C;AACA;AACA;AACA;AACA;AACA;AACA;;;AAaAC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACI;AAAQ,QAAA,OAAO,EAAE,KAAKV,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAnD2C","sourcesContent":["/* eslint-disable @typescript-eslint/no-useless-constructor */\nimport * as React from \"react\";\nimport { Kick } from \"../engines/kick\";\nimport { Transport } from \"tone\";\n// import * as Tone from \"tone\";\n\nexport class Instrument extends React.Component {\n    private sound: Kick;\n    private ctx: AudioContext;\n    private loopId!: number;\n\n    public handleClick = () => {\n        // Tone.context.resume();\n        this.createLoop();\n        // Transport.start();\n        this.ctx.resume();\n    };\n\n    constructor(props: any) {\n        super(props);\n        this.ctx = new AudioContext();\n        this.sound = new Kick(this.ctx);\n        Transport.loop = true;\n        Transport.loopEnd = \"1m\";\n\n        // Tone.Transport.bpm.value = 120;\n        // Tone.Transport.schedule(this.startLoop, \"0\");\n\n        // Tone.Transport.loop = true;\n        // Tone.Transport.loopEnd = \"1m\";\n    }\n\n    // public startLoop = (time: number) => {\n    //     console.log(\"start loop\", time);\n    //     this.kick.trigger(time);\n    //     this.kick.trigger(time + 0.5);\n    //     this.kick.trigger(time + 1);\n    //     this.kick.trigger(time + 1.5);\n    // }\n\n    createLoop = () => {\n        Transport.clear(this.loopId);\n        const loop = (time: number) => {\n            this.sound.trigger(time);\n            this.sound.trigger(time + 0.5);\n            this.sound.trigger(time + 1);\n            this.sound.trigger(time + 1.5);\n        };\n        this.loopId = Transport.schedule(loop, \"0\");\n    };\n\n    render() {\n        return (\n            <div>\n                <button onClick={this.handleClick}>Instrument</button>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}