{"ast":null,"code":"export const detachArrayBuffer = arrayBuffer => {\n  const {\n    port1,\n    port2\n  } = new MessageChannel();\n  return new Promise(resolve => {\n    port2.onmessage = () => {\n      port1.close();\n      port2.close();\n      resolve();\n    };\n\n    port1.postMessage(arrayBuffer, [arrayBuffer]);\n  });\n};","map":{"version":3,"sources":["../../../src/helpers/detach-array-buffer.ts"],"names":[],"mappings":"AAAA,OAAO,MAAM,iBAAiB,GAAI,WAAD,IAA4C;AACzE,QAAM;AAAE,IAAA,KAAF;AAAS,IAAA;AAAT,MAAmB,IAAI,cAAJ,EAAzB;AAEA,SAAO,IAAI,OAAJ,CAAa,OAAD,IAAY;AAC3B,IAAA,KAAK,CAAC,SAAN,GAAkB,MAAK;AACnB,MAAA,KAAK,CAAC,KAAN;AACA,MAAA,KAAK,CAAC,KAAN;AAEA,MAAA,OAAO;AACV,KALD;;AAOA,IAAA,KAAK,CAAC,WAAN,CAAkB,WAAlB,EAA+B,CAAC,WAAD,CAA/B;AACH,GATM,CAAP;AAUH,CAbM","sourceRoot":"","sourcesContent":["export const detachArrayBuffer = (arrayBuffer) => {\n    const { port1, port2 } = new MessageChannel();\n    return new Promise((resolve) => {\n        port2.onmessage = () => {\n            port1.close();\n            port2.close();\n            resolve();\n        };\n        port1.postMessage(arrayBuffer, [arrayBuffer]);\n    });\n};\n//# sourceMappingURL=detach-array-buffer.js.map"]},"metadata":{},"sourceType":"module"}