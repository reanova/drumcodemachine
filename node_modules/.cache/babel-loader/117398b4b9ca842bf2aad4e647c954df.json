{"ast":null,"code":"var _jsxFileName = \"/Users/reanova/Desktop/testfinal/my-app/src/components/instrument.tsx\";\n\n/* eslint-disable @typescript-eslint/no-useless-constructor */\nimport * as React from \"react\";\nimport { Kick } from \"../engines/kick\";\nimport { Transport, Time } from \"tone\"; // import * as Tone from \"tone\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Instrument extends React.Component {\n  constructor(props) {\n    super(props);\n    this.ctx = void 0;\n    this.sound = void 0;\n    this.loopId = void 0;\n\n    this.createLoop = () => {\n      if (!this.props.steps) {\n        return;\n      }\n\n      Transport.clear(this.loopId);\n\n      const loop = time => {\n        this.state.steps.forEach((s, i) => {\n          if (s) {\n            this.sound.trigger(time + i * Time(\"16n\").toSeconds());\n          }\n        });\n      };\n\n      this.loopId = Transport.schedule(loop, \"0\");\n    };\n\n    this.handleClick = () => {\n      // Tone.context.resume();\n      // if (this.ctx.state === \"running\") {\n      //     this.ctx.suspend();\n      // } else if (this.ctx.state === \"suspended\") {\n      //     this.ctx.resume();\n      // }\n      Transport.start(); // this.ctx.resume();\n    };\n\n    this.ctx = new AudioContext();\n    this.sound = new Kick(this.ctx);\n    this.state = {\n      steps: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]\n    };\n    Transport.loop = true;\n    Transport.loopEnd = \"1m\"; // Tone.Transport.bpm.value = 120;\n    // Tone.Transport.schedule(this.startLoop, \"0\");\n    // Tone.Transport.loop = true;\n    // Tone.Transport.loopEnd = \"1m\";\n  }\n\n  componentDidUpdate() {\n    if (this.props.steps && !areEqual(this.props.steps, this.state.steps)) {\n      this.setState({\n        steps: this.props.steps.slice(0)\n      });\n      this.createLoop();\n    }\n  } // public startLoop = (time: number) => {\n  //     console.log(\"start loop\", time);\n  //     this.kick.trigger(time);\n  //     this.kick.trigger(time + 0.5);\n  //     this.kick.trigger(time + 1);\n  //     this.kick.trigger(time + 1.5);\n  // }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleClick,\n        children: \"Instrument\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport const areEqual = (ar1, ar2) => {\n  if (ar1.length !== ar2.length) return false;\n  let equal = true;\n  ar1.forEach((el, idx) => {\n    if (el !== ar2[idx]) equal = false;\n  });\n  return equal;\n};","map":{"version":3,"sources":["/Users/reanova/Desktop/testfinal/my-app/src/components/instrument.tsx"],"names":["React","Kick","Transport","Time","Instrument","Component","constructor","props","ctx","sound","loopId","createLoop","steps","clear","loop","time","state","forEach","s","i","trigger","toSeconds","schedule","handleClick","start","AudioContext","loopEnd","componentDidUpdate","areEqual","setState","slice","render","ar1","ar2","length","equal","el","idx"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-useless-constructor */\nimport * as React from \"react\";\nimport { Kick } from \"../engines/kick\";\nimport { Transport, Time } from \"tone\";\n// import * as Tone from \"tone\";\n\nexport interface InstrumentProps {\n    steps?: boolean[];\n}\n\nexport class Instrument extends React.Component<InstrumentProps, any> {\n    private ctx: AudioContext;\n    private sound: Kick;\n    private loopId!: number;\n\n    constructor(props: any) {\n        super(props);\n        this.ctx = new AudioContext();\n        this.sound = new Kick(this.ctx);\n        this.state = {\n            steps: [\n                false,\n                false,\n                false,\n                false,\n                false,\n                false,\n                false,\n                false,\n                false,\n                false,\n                false,\n                false,\n                false,\n                false,\n                false,\n                false,\n            ],\n        };\n        Transport.loop = true;\n        Transport.loopEnd = \"1m\";\n\n        // Tone.Transport.bpm.value = 120;\n        // Tone.Transport.schedule(this.startLoop, \"0\");\n\n        // Tone.Transport.loop = true;\n        // Tone.Transport.loopEnd = \"1m\";\n    }\n\n    componentDidUpdate() {\n        if (this.props.steps && !areEqual(this.props.steps, this.state.steps)) {\n            this.setState({\n                steps: this.props.steps.slice(0),\n            });\n            this.createLoop();\n        }\n    }\n\n    // public startLoop = (time: number) => {\n    //     console.log(\"start loop\", time);\n    //     this.kick.trigger(time);\n    //     this.kick.trigger(time + 0.5);\n    //     this.kick.trigger(time + 1);\n    //     this.kick.trigger(time + 1.5);\n    // }\n\n    createLoop = () => {\n        if (!this.props.steps) {\n            return;\n        }\n        Transport.clear(this.loopId);\n        const loop = (time: number) => {\n            this.state.steps.forEach((s, i) => {\n                if (s) {\n                    this.sound.trigger(time + i * Time(\"16n\").toSeconds());\n                }\n            });\n        };\n        this.loopId = Transport.schedule(loop, \"0\");\n    };\n\n    public handleClick = () => {\n        // Tone.context.resume();\n        // if (this.ctx.state === \"running\") {\n        //     this.ctx.suspend();\n        // } else if (this.ctx.state === \"suspended\") {\n        //     this.ctx.resume();\n        // }\n        Transport.start();\n        // this.ctx.resume();\n    };\n\n    render() {\n        return (\n            <div>\n                <button onClick={this.handleClick}>Instrument</button>\n            </div>\n        );\n    }\n}\n\nexport const areEqual = (ar1, ar2) => {\n    if (ar1.length !== ar2.length) return false;\n    let equal = true;\n    ar1.forEach((el, idx) => {\n        if (el !== ar2[idx]) equal = false;\n    });\n    return equal;\n};\n"]},"metadata":{},"sourceType":"module"}