{"ast":null,"code":"var _jsxFileName = \"/Users/reanova/Desktop/testfinal/my-app/src/components/instrument.tsx\";\n\n/* eslint-disable @typescript-eslint/no-useless-constructor */\nimport * as React from \"react\";\nimport { Transport, Time } from \"tone\";\nimport { Clap } from \"../engines/clap\";\nimport { HiHat } from \"../engines/hat\";\nimport { Kick } from \"../engines/kick\";\nimport { Snare } from \"../engines/snare\"; // import * as Tone from \"tone\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Instrument extends React.Component {\n  constructor(props) {\n    super(props);\n    this.ctx = void 0;\n    this.sound = void 0;\n    this.loopId = void 0;\n\n    this.createLoop = () => {\n      if (!this.props.steps) {\n        return;\n      }\n\n      Transport.clear(this.loopId);\n\n      const loop = time => {\n        this.state.steps.forEach((s, i) => {\n          if (s) {\n            this.sound.trigger(time + i * Time(\"16n\").toSeconds());\n          }\n        });\n      };\n\n      this.loopId = Transport.schedule(loop, \"0\");\n    };\n\n    this.handleClick = () => {\n      // this.ctx.resume();\n      // if (this.ctx.state === \"running\") {\n      //     this.ctx.suspend();\n      // } else if (this.ctx.state === \"suspended\") {\n      //     this.ctx.resume();\n      // }\n      // Transport.start();\n      if (this.props.handleClick) this.props.handleClick(this.props.engine, this.state.steps.slice(0));\n    };\n\n    this.ctx = new AudioContext();\n    this.sound = new Kick(this.ctx);\n    this.state = {\n      steps: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]\n    };\n\n    switch (props.engine) {\n      case \"Kick\":\n        this.sound = new Kick(this.ctx);\n        break;\n\n      case \"Snare\":\n        this.sound = new Snare(this.ctx);\n        break;\n\n      case \"HiHat\":\n        this.sound = new HiHat(this.ctx);\n        break;\n\n      case \"Clap\":\n        this.sound = new Clap(this.ctx);\n        break;\n    } // Tone.Transport.bpm.value = 120;\n    // Tone.Transport.schedule(this.startLoop, \"0\");\n    // Tone.Transport.loop = true;\n    // Tone.Transport.loopEnd = \"1m\";\n\n  }\n\n  componentDidUpdate() {\n    if (this.props.steps && !areEqual(this.props.steps, this.state.steps)) {\n      this.setState({\n        steps: this.props.steps.slice(0)\n      });\n      this.createLoop();\n    }\n  } // public startLoop = (time: number) => {\n  //     console.log(\"start loop\", time);\n  //     this.kick.trigger(time);\n  //     this.kick.trigger(time + 0.5);\n  //     this.kick.trigger(time + 1);\n  //     this.kick.trigger(time + 1.5);\n  // }\n\n\n  render() {\n    const InstrumentStyle = {\n      height: \"3em\",\n      margin: \"0.2em\",\n      borderRadius: 10,\n      padding: 5,\n      backgroundColor: this.props.selected ? \"#2AC7DC\" : \"#696969\",\n      color: \"white\",\n      boxShadow: \"2px 2px 5px #222\"\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: InstrumentStyle,\n      onClick: this.handleClick,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.props.engine\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport const areEqual = (ar1, ar2) => {\n  if (ar1.length !== ar2.length) return false;\n  let equal = true;\n  ar1.forEach((el, idx) => {\n    if (el !== ar2[idx]) equal = false;\n  });\n  return equal;\n};","map":{"version":3,"sources":["/Users/reanova/Desktop/testfinal/my-app/src/components/instrument.tsx"],"names":["React","Transport","Time","Clap","HiHat","Kick","Snare","Instrument","Component","constructor","props","ctx","sound","loopId","createLoop","steps","clear","loop","time","state","forEach","s","i","trigger","toSeconds","schedule","handleClick","engine","slice","AudioContext","componentDidUpdate","areEqual","setState","render","InstrumentStyle","height","margin","borderRadius","padding","backgroundColor","selected","color","boxShadow","ar1","ar2","length","equal","el","idx"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-useless-constructor */\nimport * as React from \"react\";\nimport { Transport, Time } from \"tone\";\nimport { Clap } from \"../engines/clap\";\nimport { InstrumentEngine } from \"../engines/engines\";\nimport { HiHat } from \"../engines/hat\";\nimport { Kick } from \"../engines/kick\";\nimport { Snare } from \"../engines/snare\";\n\n// import * as Tone from \"tone\";\n\nexport interface InstrumentProps {\n    engine: string;\n    steps?: boolean[];\n    handleClick?: (engine: string, steps: boolean[]) => void;\n    selected?: boolean;\n}\n\nexport class Instrument extends React.Component<InstrumentProps, any> {\n    private ctx: AudioContext;\n    private sound: InstrumentEngine;\n    private loopId!: number;\n\n    constructor(props: any) {\n        super(props);\n        this.ctx = new AudioContext();\n        this.sound = new Kick(this.ctx);\n        this.state = {\n            steps: [\n                false,\n                false,\n                false,\n                false,\n                false,\n                false,\n                false,\n                false,\n                false,\n                false,\n                false,\n                false,\n                false,\n                false,\n                false,\n                false,\n            ],\n        };\n        switch (props.engine) {\n            case \"Kick\":\n                this.sound = new Kick(this.ctx);\n                break;\n            case \"Snare\":\n                this.sound = new Snare(this.ctx);\n                break;\n            case \"HiHat\":\n                this.sound = new HiHat(this.ctx);\n                break;\n            case \"Clap\":\n                this.sound = new Clap(this.ctx);\n                break;\n        }\n\n        // Tone.Transport.bpm.value = 120;\n        // Tone.Transport.schedule(this.startLoop, \"0\");\n\n        // Tone.Transport.loop = true;\n        // Tone.Transport.loopEnd = \"1m\";\n    }\n\n    componentDidUpdate() {\n        if (this.props.steps && !areEqual(this.props.steps, this.state.steps)) {\n            this.setState({\n                steps: this.props.steps.slice(0),\n            });\n            this.createLoop();\n        }\n    }\n\n    // public startLoop = (time: number) => {\n    //     console.log(\"start loop\", time);\n    //     this.kick.trigger(time);\n    //     this.kick.trigger(time + 0.5);\n    //     this.kick.trigger(time + 1);\n    //     this.kick.trigger(time + 1.5);\n    // }\n\n    createLoop = () => {\n        if (!this.props.steps) {\n            return;\n        }\n        Transport.clear(this.loopId);\n        const loop = (time: number) => {\n            this.state.steps.forEach((s, i) => {\n                if (s) {\n                    this.sound.trigger(time + i * Time(\"16n\").toSeconds());\n                }\n            });\n        };\n        this.loopId = Transport.schedule(loop, \"0\");\n    };\n\n    handleClick = () => {\n        // this.ctx.resume();\n        // if (this.ctx.state === \"running\") {\n        //     this.ctx.suspend();\n        // } else if (this.ctx.state === \"suspended\") {\n        //     this.ctx.resume();\n        // }\n        // Transport.start();\n        if (this.props.handleClick)\n            this.props.handleClick(\n                this.props.engine,\n                this.state.steps.slice(0)\n            );\n    };\n\n    render() {\n        const InstrumentStyle = {\n            height: \"3em\",\n            margin: \"0.2em\",\n            borderRadius: 10,\n            padding: 5,\n            backgroundColor: this.props.selected ? \"#2AC7DC\" : \"#696969\",\n            color: \"white\",\n            boxShadow: \"2px 2px 5px #222\",\n        };\n        return (\n            <div style={InstrumentStyle} onClick={this.handleClick}>\n                <p>{this.props.engine}</p>\n            </div>\n        );\n    }\n}\n\nexport const areEqual = (ar1, ar2) => {\n    if (ar1.length !== ar2.length) return false;\n    let equal = true;\n    ar1.forEach((el, idx) => {\n        if (el !== ar2[idx]) equal = false;\n    });\n    return equal;\n};\n"]},"metadata":{},"sourceType":"module"}