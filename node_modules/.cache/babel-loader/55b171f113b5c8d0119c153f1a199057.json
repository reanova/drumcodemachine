{"ast":null,"code":"var _jsxFileName = \"/Users/reanova/Desktop/testfinal/my-app/src/components/instrument.tsx\";\n\n/* eslint-disable @typescript-eslint/no-useless-constructor */\nimport * as React from \"react\";\nimport { Kick } from \"../engines/kick\";\nimport { Transport } from \"tone\";\nimport * as Tone from \"tone\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Instrument extends React.Component {\n  constructor(props) {\n    super(props);\n    this.sound = void 0;\n    this.ctx = void 0;\n    this.loopId = void 0;\n\n    this.handleClick = () => {\n      // Tone.context.resume();\n      this.createLoop(); // Transport.start();\n\n      Tone.context.resume();\n    };\n\n    this.createLoop = () => {\n      Transport.clear(this.loopId);\n\n      const loop = time => {\n        this.sound.trigger(time);\n        this.sound.trigger(time + 0.5);\n        this.sound.trigger(time + 1);\n        this.sound.trigger(time + 1.5);\n      };\n\n      this.loopId = Transport.schedule(loop, \"0\");\n    };\n\n    this.ctx = new AudioContext();\n    this.sound = new Kick(this.ctx);\n    Transport.loop = true;\n    Transport.loopEnd = \"1m\"; // Tone.Transport.bpm.value = 120;\n    // Tone.Transport.schedule(this.startLoop, \"0\");\n    // Tone.Transport.loop = true;\n    // Tone.Transport.loopEnd = \"1m\";\n  } // public startLoop = (time: number) => {\n  //     console.log(\"start loop\", time);\n  //     this.kick.trigger(time);\n  //     this.kick.trigger(time + 0.5);\n  //     this.kick.trigger(time + 1);\n  //     this.kick.trigger(time + 1.5);\n  // }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleClick,\n        children: \"Instrument\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/reanova/Desktop/testfinal/my-app/src/components/instrument.tsx"],"names":["React","Kick","Transport","Tone","Instrument","Component","constructor","props","sound","ctx","loopId","handleClick","createLoop","context","resume","clear","loop","time","trigger","schedule","AudioContext","loopEnd","render"],"mappings":";;AAAA;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,SAAT,QAA0B,MAA1B;AACA,OAAO,KAAKC,IAAZ,MAAsB,MAAtB;;AAEA,OAAO,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AAK5CC,EAAAA,WAAW,CAACC,KAAD,EAAa;AACpB,UAAMA,KAAN;AADoB,SAJhBC,KAIgB;AAAA,SAHhBC,GAGgB;AAAA,SAFhBC,MAEgB;;AAAA,SAsBhBC,WAtBgB,GAsBF,MAAM;AACxB;AACA,WAAKC,UAAL,GAFwB,CAGxB;;AACAT,MAAAA,IAAI,CAACU,OAAL,CAAaC,MAAb;AACH,KA3BuB;;AAAA,SA6BxBF,UA7BwB,GA6BX,MAAM;AACfV,MAAAA,SAAS,CAACa,KAAV,CAAgB,KAAKL,MAArB;;AACA,YAAMM,IAAI,GAAIC,IAAD,IAAkB;AAC3B,aAAKT,KAAL,CAAWU,OAAX,CAAmBD,IAAnB;AACA,aAAKT,KAAL,CAAWU,OAAX,CAAmBD,IAAI,GAAG,GAA1B;AACA,aAAKT,KAAL,CAAWU,OAAX,CAAmBD,IAAI,GAAG,CAA1B;AACA,aAAKT,KAAL,CAAWU,OAAX,CAAmBD,IAAI,GAAG,GAA1B;AACH,OALD;;AAMA,WAAKP,MAAL,GAAcR,SAAS,CAACiB,QAAV,CAAmBH,IAAnB,EAAyB,GAAzB,CAAd;AACH,KAtCuB;;AAEpB,SAAKP,GAAL,GAAW,IAAIW,YAAJ,EAAX;AACA,SAAKZ,KAAL,GAAa,IAAIP,IAAJ,CAAS,KAAKQ,GAAd,CAAb;AACAP,IAAAA,SAAS,CAACc,IAAV,GAAiB,IAAjB;AACAd,IAAAA,SAAS,CAACmB,OAAV,GAAoB,IAApB,CALoB,CAOpB;AACA;AAEA;AACA;AACH,GAjB2C,CAmB5C;AACA;AACA;AACA;AACA;AACA;AACA;;;AAoBAC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACI;AAAQ,QAAA,OAAO,EAAE,KAAKX,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAnD2C","sourcesContent":["/* eslint-disable @typescript-eslint/no-useless-constructor */\nimport * as React from \"react\";\nimport { Kick } from \"../engines/kick\";\nimport { Transport } from \"tone\";\nimport * as Tone from \"tone\";\n\nexport class Instrument extends React.Component {\n    private sound: Kick;\n    private ctx: AudioContext;\n    private loopId!: number;\n\n    constructor(props: any) {\n        super(props);\n        this.ctx = new AudioContext();\n        this.sound = new Kick(this.ctx);\n        Transport.loop = true;\n        Transport.loopEnd = \"1m\";\n\n        // Tone.Transport.bpm.value = 120;\n        // Tone.Transport.schedule(this.startLoop, \"0\");\n\n        // Tone.Transport.loop = true;\n        // Tone.Transport.loopEnd = \"1m\";\n    }\n\n    // public startLoop = (time: number) => {\n    //     console.log(\"start loop\", time);\n    //     this.kick.trigger(time);\n    //     this.kick.trigger(time + 0.5);\n    //     this.kick.trigger(time + 1);\n    //     this.kick.trigger(time + 1.5);\n    // }\n\n    private handleClick = () => {\n        // Tone.context.resume();\n        this.createLoop();\n        // Transport.start();\n        Tone.context.resume();\n    };\n\n    createLoop = () => {\n        Transport.clear(this.loopId);\n        const loop = (time: number) => {\n            this.sound.trigger(time);\n            this.sound.trigger(time + 0.5);\n            this.sound.trigger(time + 1);\n            this.sound.trigger(time + 1.5);\n        };\n        this.loopId = Transport.schedule(loop, \"0\");\n    };\n\n    render() {\n        return (\n            <div>\n                <button onClick={this.handleClick}>Instrument</button>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}